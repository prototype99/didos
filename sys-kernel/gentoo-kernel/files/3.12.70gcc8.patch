From ecd9135d2ec6cfd83cb26ee62eccf3445f45aeff Mon Sep 17 00:00:00 2001
From: seirra <sophietheopossum@yandex.com>
Date: Wed, 30 Sep 2020 21:50:44 +0100
Subject: [PATCH] remove gcc8 warning

---
 fs/exec.c             | 13 ++++++-------
 include/linux/sched.h |  6 +++++-
 2 files changed, 11 insertions(+), 8 deletions(-)

diff --git a/fs/exec.c b/fs/exec.c
index f33c0fff702c..b48429fbb698 100644
--- a/fs/exec.c
+++ b/fs/exec.c
@@ -1028,15 +1028,14 @@ killed:
 	return -EAGAIN;
 }
 
-char *get_task_comm(char *buf, struct task_struct *tsk)
+char *__get_task_comm(char *buf, size_t buf_size, struct task_struct *tsk)
 {
-	/* buf must be at least sizeof(tsk->comm) in size */
 	task_lock(tsk);
-	strncpy(buf, tsk->comm, sizeof(tsk->comm));
+	strncpy(buf, tsk->comm, buf_size);
 	task_unlock(tsk);
 	return buf;
 }
-EXPORT_SYMBOL_GPL(get_task_comm);
+EXPORT_SYMBOL_GPL(__get_task_comm);
 
 /*
  * These functions flushes out all traces of the currently running executable
@@ -1153,7 +1152,7 @@ void setup_new_exec(struct linux_binprm * bprm)
 	   group */
 
 	current->self_exec_id++;
-			
+
 	flush_signal_handlers(current, 0);
 }
 EXPORT_SYMBOL(setup_new_exec);
@@ -1325,8 +1324,8 @@ static void bprm_fill_uid(struct linux_binprm *bprm)
 	}
 }
 
-/* 
- * Fill the binprm structure from the inode. 
+/*
+ * Fill the binprm structure from the inode.
  * Check permissions, then read the first 128 (BINPRM_BUF_SIZE) bytes
  *
  * This may be called multiple times for binary chains (scripts for example).
diff --git a/include/linux/sched.h b/include/linux/sched.h
index 2bc93e252fef..b85bf394825a 100644
--- a/include/linux/sched.h
+++ b/include/linux/sched.h
@@ -2162,7 +2162,11 @@ struct task_struct *fork_idle(int);
 extern pid_t kernel_thread(int (*fn)(void *), void *arg, unsigned long flags);
 
 extern void set_task_comm(struct task_struct *tsk, char *from);
-extern char *get_task_comm(char *to, struct task_struct *tsk);
+extern char *__get_task_comm(char *to, size_t len, struct task_struct *tsk);
+#define get_task_comm(buf, tsk) ({			\
+	BUILD_BUG_ON(sizeof(buf) != TASK_COMM_LEN);	\
+	__get_task_comm(buf, sizeof(buf), tsk);		\
+})
 
 #ifdef CONFIG_SMP
 void scheduler_ipi(void);
-- 
2.26.2

